name: Run gitops to create topics, service accounts and acls
on:
  push:
    branches:
      - gitops
    paths-ignore:
      - '**.md'
      - '.github/*'
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: gitops
    strategy:
      matrix:
        env: [ "dev" ]
      fail-fast: true
      max-parallel: 1
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gitops
      - name: Run script file
        run: |
#          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC86BB64
#          sudo add-apt-repository ppa:rmescandon/yq
#          sudo apt update
#          sudo apt install yq -y


          apk update
          apk add yq
          yq ea -i 'select(fi == 0) * select(fi == 1)' topics.yaml portfolio/portfolio-topics.yaml
          yq ea -i 'select(fi == 0) * select(fi == 1)' services.yaml portfolio/portfolio-services.yaml
          yq ea -i 'select(fi == 0) * select(fi == 1)' state.yaml portfolio/portfolio-state.yaml

#          export CCLOUD_EMAIL=${{ secrets.CCLOUD_EMAIL }}
#          export CCLOUD_PASSWORD=${{ secrets.CCLOUD_PASSWORD }}
#
#          mkdir ccloud
#          curl -L --http1.1 https://cnfl.io/ccloud-cli | sh -s -- -b ./ccloud
#          export PATH=./ccloud:$PATH;
#
#          ccloud login
#
#          unzip \*.zip
#
#          export XX_CCLOUD_EMAIL=$CCLOUD_EMAIL
#          export XX_CCLOUD_PASSWORD=$CCLOUD_PASSWORD
#          export KAFKA_BOOTSTRAP_SERVERS=${{ secrets.KAFKA_BOOTSTRAP_SERVERS }}
#          export KAFKA_SASL_JAAS_USERNAME=${{ secrets.KAFKA_SASL_JAAS_USERNAME }}
#          export KAFKA_SASL_JAAS_PASSWORD=${{ secrets.KAFKA_SASL_JAAS_PASSWORD }}
#          export KAFKA_SECURITY_PROTOCOL=${{ secrets.KAFKA_SECURITY_PROTOCOL }}
#          export KAFKA_SASL_MECHANISM=${{ secrets.KAFKA_SASL_MECHANISM }}
#          export KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=${{ secrets.KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM }}
#
#          chmod +x kafka-gitops
#          mv kafka-gitops /usr/local/bin
#          VALID_STATE=$(kafka-gitops --file state.yaml validate)
#
#          SA_SUCCESS=$(kafka-gitops account)
#
#          PLAN_OUTPUT=$(kafka-gitops --file state.yaml plan -o plan.json)
#
#          IS_VALID_STATE="No"
#          IS_SA_SUCCESS="No"
#          PLAN_OUTPUT_VALID="Yes"
#          if [[ "$VALID_STATE" =~ .*"[VALID]".* ]]; then
#            IS_VALID_STATE="Yes"
#          fi
#
#          if [[ "$SA_SUCCESS" =~ .*"[SUCCESS]".* ]]; then
#            IS_SA_SUCCESS="Yes"
#          fi
#
#          if [[ "$PLAN_OUTPUT" =~ .*"[ERROR]".* ]]; then
#            PLAN_OUTPUT_VALID="No"
#          fi
#
#          if [[ "$IS_VALID_STATE" == "Yes" && "$IS_SA_SUCCESS" == "Yes" && "$PLAN_OUTPUT_VALID" == "Yes" ]]; then
#            kafka-gitops --file state.yaml validate
#            kafka-gitops account
#            kafka-gitops --file state.yaml plan -o plan.json
#            kafka-gitops --file state.yaml apply -p plan.json
#          else
#            if [[ "$IS_VALID_STATE" == "No" ]]; then
#              echo "$VALID_STATE"
#            elif [[ "$IS_SA_SUCCESS" == "Yes" ]]; then
#              echo "$SA_SUCCESS"
#            elif [[ "$PLAN_OUTPUT_VALID" == "No" ]]; then
#              echo "$PLAN_OUTPUT"
#            else
#              echo "Unexpected Error!"
#            fi
#            exit 1
#          fi
